{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from matplotlib import pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Date</th>\n",
       "      <th>ARD_Tile</th>\n",
       "      <th>L08_002_SR_B3</th>\n",
       "      <th>L08_002_SR_B7</th>\n",
       "      <th>L08_002_SR_B6</th>\n",
       "      <th>L08_002_SR_B1</th>\n",
       "      <th>L08_002_SR_B4</th>\n",
       "      <th>L08_002_SR_B5</th>\n",
       "      <th>...</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Water</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Water_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Unused</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Unused_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Interpolated_Aerosol</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Interpolated_Aerosol_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Aerosol_Level</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Aerosol_Level_Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2013-03-18</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.699113</td>\n",
       "      <td>0.308227</td>\n",
       "      <td>0.289803</td>\n",
       "      <td>0.756615</td>\n",
       "      <td>0.689213</td>\n",
       "      <td>0.665122</td>\n",
       "      <td>...</td>\n",
       "      <td>0b0</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2013-04-05</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.974250</td>\n",
       "      <td>0.542637</td>\n",
       "      <td>0.663088</td>\n",
       "      <td>1.016847</td>\n",
       "      <td>0.983023</td>\n",
       "      <td>0.975653</td>\n",
       "      <td>...</td>\n",
       "      <td>0b0</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2013-04-10</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.747677</td>\n",
       "      <td>0.249543</td>\n",
       "      <td>0.369525</td>\n",
       "      <td>0.843185</td>\n",
       "      <td>0.738437</td>\n",
       "      <td>0.731672</td>\n",
       "      <td>...</td>\n",
       "      <td>0b0</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2013-04-26</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.110475</td>\n",
       "      <td>0.157610</td>\n",
       "      <td>0.201115</td>\n",
       "      <td>0.067575</td>\n",
       "      <td>0.125050</td>\n",
       "      <td>0.217807</td>\n",
       "      <td>...</td>\n",
       "      <td>0b0</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b01</td>\n",
       "      <td>Low</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2013-05-12</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.125160</td>\n",
       "      <td>0.124802</td>\n",
       "      <td>0.153705</td>\n",
       "      <td>0.064880</td>\n",
       "      <td>0.124472</td>\n",
       "      <td>0.234940</td>\n",
       "      <td>...</td>\n",
       "      <td>0b1</td>\n",
       "      <td>aerosol retrieval is valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 77 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Latitude  Longitude        Date   ARD_Tile  L08_002_SR_B3  L08_002_SR_B7   \n",
       "0  43.580457 -79.653295  2013-03-18  CU h25v06       0.699113       0.308227  \\\n",
       "1  43.580457 -79.653295  2013-04-05  CU h25v06       0.974250       0.542637   \n",
       "2  43.580457 -79.653295  2013-04-10  CU h25v06       0.747677       0.249543   \n",
       "3  43.580457 -79.653295  2013-04-26  CU h25v06       0.110475       0.157610   \n",
       "4  43.580457 -79.653295  2013-05-12  CU h25v06       0.125160       0.124802   \n",
       "\n",
       "   L08_002_SR_B6  L08_002_SR_B1  L08_002_SR_B4  L08_002_SR_B5  ...   \n",
       "0       0.289803       0.756615       0.689213       0.665122  ...  \\\n",
       "1       0.663088       1.016847       0.983023       0.975653  ...   \n",
       "2       0.369525       0.843185       0.738437       0.731672  ...   \n",
       "3       0.201115       0.067575       0.125050       0.217807  ...   \n",
       "4       0.153705       0.064880       0.124472       0.234940  ...   \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval   \n",
       "0                                            0b0  \\\n",
       "1                                            0b0   \n",
       "2                                            0b0   \n",
       "3                                            0b0   \n",
       "4                                            0b1   \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval_Description   \n",
       "0                     aerosol retrieval is not valid          \\\n",
       "1                     aerosol retrieval is not valid           \n",
       "2                     aerosol retrieval is not valid           \n",
       "3                     aerosol retrieval is not valid           \n",
       "4                         aerosol retrieval is valid           \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Water  L08_002_SR_QA_AEROSOL_Water_Description   \n",
       "0                          0b0                       pixel is not water  \\\n",
       "1                          0b0                       pixel is not water   \n",
       "2                          0b0                       pixel is not water   \n",
       "3                          0b0                       pixel is not water   \n",
       "4                          0b0                       pixel is not water   \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Unused L08_002_SR_QA_AEROSOL_Unused_Description   \n",
       "0                           0b0                                      NaN  \\\n",
       "1                           0b0                                      NaN   \n",
       "2                           0b0                                      NaN   \n",
       "3                           0b0                                      NaN   \n",
       "4                           0b0                                      NaN   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Interpolated_Aerosol   \n",
       "0                                        0b1  \\\n",
       "1                                        0b0   \n",
       "2                                        0b1   \n",
       "3                                        0b1   \n",
       "4                                        0b0   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Interpolated_Aerosol_Description   \n",
       "0                      pixel is aerosol interpolated      \\\n",
       "1                  pixel is not aerosol interpolated       \n",
       "2                      pixel is aerosol interpolated       \n",
       "3                      pixel is aerosol interpolated       \n",
       "4                  pixel is not aerosol interpolated       \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Aerosol_Level   \n",
       "0                                0b11  \\\n",
       "1                                0b11   \n",
       "2                                0b11   \n",
       "3                                0b01   \n",
       "4                                0b11   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Aerosol_Level_Description  \n",
       "0                                            High  \n",
       "1                                            High  \n",
       "2                                            High  \n",
       "3                                             Low  \n",
       "4                                            High  \n",
       "\n",
       "[5 rows x 77 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('Landsat-8-and-9-SR-Bands-1-7-L08-002-results.csv')\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Date</th>\n",
       "      <th>ARD_Tile</th>\n",
       "      <th>L08_002_SR_B3</th>\n",
       "      <th>L08_002_SR_B7</th>\n",
       "      <th>L08_002_SR_B6</th>\n",
       "      <th>L08_002_SR_B1</th>\n",
       "      <th>L08_002_SR_B4</th>\n",
       "      <th>L08_002_SR_B5</th>\n",
       "      <th>...</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Water</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Water_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Unused</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Unused_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Interpolated_Aerosol</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Interpolated_Aerosol_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Aerosol_Level</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Aerosol_Level_Description</th>\n",
       "      <th>date_diff</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2013-03-18</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.699113</td>\n",
       "      <td>0.308227</td>\n",
       "      <td>0.289803</td>\n",
       "      <td>0.756615</td>\n",
       "      <td>0.689213</td>\n",
       "      <td>0.665122</td>\n",
       "      <td>...</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2013-04-05</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.974250</td>\n",
       "      <td>0.542637</td>\n",
       "      <td>0.663088</td>\n",
       "      <td>1.016847</td>\n",
       "      <td>0.983023</td>\n",
       "      <td>0.975653</td>\n",
       "      <td>...</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "      <td>18.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2013-04-10</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.747677</td>\n",
       "      <td>0.249543</td>\n",
       "      <td>0.369525</td>\n",
       "      <td>0.843185</td>\n",
       "      <td>0.738437</td>\n",
       "      <td>0.731672</td>\n",
       "      <td>...</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2013-04-26</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.110475</td>\n",
       "      <td>0.157610</td>\n",
       "      <td>0.201115</td>\n",
       "      <td>0.067575</td>\n",
       "      <td>0.125050</td>\n",
       "      <td>0.217807</td>\n",
       "      <td>...</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b01</td>\n",
       "      <td>Low</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2013-05-12</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.125160</td>\n",
       "      <td>0.124802</td>\n",
       "      <td>0.153705</td>\n",
       "      <td>0.064880</td>\n",
       "      <td>0.124472</td>\n",
       "      <td>0.234940</td>\n",
       "      <td>...</td>\n",
       "      <td>aerosol retrieval is valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 78 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Latitude  Longitude       Date   ARD_Tile  L08_002_SR_B3  L08_002_SR_B7   \n",
       "0  43.580457 -79.653295 2013-03-18  CU h25v06       0.699113       0.308227  \\\n",
       "1  43.580457 -79.653295 2013-04-05  CU h25v06       0.974250       0.542637   \n",
       "2  43.580457 -79.653295 2013-04-10  CU h25v06       0.747677       0.249543   \n",
       "3  43.580457 -79.653295 2013-04-26  CU h25v06       0.110475       0.157610   \n",
       "4  43.580457 -79.653295 2013-05-12  CU h25v06       0.125160       0.124802   \n",
       "\n",
       "   L08_002_SR_B6  L08_002_SR_B1  L08_002_SR_B4  L08_002_SR_B5  ...   \n",
       "0       0.289803       0.756615       0.689213       0.665122  ...  \\\n",
       "1       0.663088       1.016847       0.983023       0.975653  ...   \n",
       "2       0.369525       0.843185       0.738437       0.731672  ...   \n",
       "3       0.201115       0.067575       0.125050       0.217807  ...   \n",
       "4       0.153705       0.064880       0.124472       0.234940  ...   \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval_Description   \n",
       "0                     aerosol retrieval is not valid          \\\n",
       "1                     aerosol retrieval is not valid           \n",
       "2                     aerosol retrieval is not valid           \n",
       "3                     aerosol retrieval is not valid           \n",
       "4                         aerosol retrieval is valid           \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Water  L08_002_SR_QA_AEROSOL_Water_Description   \n",
       "0                          0b0                       pixel is not water  \\\n",
       "1                          0b0                       pixel is not water   \n",
       "2                          0b0                       pixel is not water   \n",
       "3                          0b0                       pixel is not water   \n",
       "4                          0b0                       pixel is not water   \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Unused  L08_002_SR_QA_AEROSOL_Unused_Description   \n",
       "0                           0b0                                       NaN  \\\n",
       "1                           0b0                                       NaN   \n",
       "2                           0b0                                       NaN   \n",
       "3                           0b0                                       NaN   \n",
       "4                           0b0                                       NaN   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Interpolated_Aerosol   \n",
       "0                                        0b1  \\\n",
       "1                                        0b0   \n",
       "2                                        0b1   \n",
       "3                                        0b1   \n",
       "4                                        0b0   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Interpolated_Aerosol_Description   \n",
       "0                      pixel is aerosol interpolated      \\\n",
       "1                  pixel is not aerosol interpolated       \n",
       "2                      pixel is aerosol interpolated       \n",
       "3                      pixel is aerosol interpolated       \n",
       "4                  pixel is not aerosol interpolated       \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Aerosol_Level   \n",
       "0                                0b11  \\\n",
       "1                                0b11   \n",
       "2                                0b11   \n",
       "3                                0b01   \n",
       "4                                0b11   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Aerosol_Level_Description date_diff  \n",
       "0                                            High       NaN  \n",
       "1                                            High      18.0  \n",
       "2                                            High       5.0  \n",
       "3                                             Low      16.0  \n",
       "4                                            High      16.0  \n",
       "\n",
       "[5 rows x 78 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Date'] = pd.to_datetime(df['Date'])\n",
    "df['date_diff'] = df['Date'].diff().dt.days\n",
    "\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(df['date_diff'], bins=35, range=(0,35), align='left')\n",
    "plt.title('Histogram of Landsat8 Revisit Periods')\n",
    "plt.xlabel('Days')\n",
    "plt.ylabel('Frequency')\n",
    "plt.xticks(range(0, 36, 2))\n",
    "plt.savefig('revisit_histogram.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df['Date'], df['date_diff'])\n",
    "plt.title('Time Series of Landsat8 Revisit Periods')\n",
    "plt.xlabel('Date')\n",
    "plt.ylabel('Days')\n",
    "# plt.xticks(rotation=45)\n",
    "plt.savefig('revisit_timeseries.png')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
