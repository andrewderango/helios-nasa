{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from matplotlib import pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Date</th>\n",
       "      <th>ARD_Tile</th>\n",
       "      <th>L08_002_SR_B4</th>\n",
       "      <th>L08_002_SR_B6</th>\n",
       "      <th>L08_002_SR_B1</th>\n",
       "      <th>L08_002_SR_B5</th>\n",
       "      <th>L08_002_SR_B3</th>\n",
       "      <th>L08_002_SR_B2</th>\n",
       "      <th>...</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Water</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Water_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Unused</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Unused_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Interpolated_Aerosol</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Interpolated_Aerosol_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Aerosol_Level</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Aerosol_Level_Description</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2020-01-08</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>-0.044845</td>\n",
       "      <td>0.045878</td>\n",
       "      <td>-0.072262</td>\n",
       "      <td>0.039910</td>\n",
       "      <td>-0.002440</td>\n",
       "      <td>-0.132048</td>\n",
       "      <td>...</td>\n",
       "      <td>0b0</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2020-01-24</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.582348</td>\n",
       "      <td>0.264887</td>\n",
       "      <td>0.566810</td>\n",
       "      <td>0.568542</td>\n",
       "      <td>0.571403</td>\n",
       "      <td>0.568790</td>\n",
       "      <td>...</td>\n",
       "      <td>0b0</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2020-02-09</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.747842</td>\n",
       "      <td>0.533480</td>\n",
       "      <td>0.800588</td>\n",
       "      <td>0.718665</td>\n",
       "      <td>0.737117</td>\n",
       "      <td>0.792915</td>\n",
       "      <td>...</td>\n",
       "      <td>0b0</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2020-02-25</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.871152</td>\n",
       "      <td>0.579680</td>\n",
       "      <td>0.951067</td>\n",
       "      <td>0.832130</td>\n",
       "      <td>0.878165</td>\n",
       "      <td>0.940782</td>\n",
       "      <td>...</td>\n",
       "      <td>0b0</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2020-03-12</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.439815</td>\n",
       "      <td>0.414845</td>\n",
       "      <td>0.456315</td>\n",
       "      <td>0.477737</td>\n",
       "      <td>0.418530</td>\n",
       "      <td>0.449660</td>\n",
       "      <td>...</td>\n",
       "      <td>0b0</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 77 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Latitude  Longitude        Date   ARD_Tile  L08_002_SR_B4  L08_002_SR_B6   \n",
       "0  43.580457 -79.653295  2020-01-08  CU h25v06      -0.044845       0.045878  \\\n",
       "1  43.580457 -79.653295  2020-01-24  CU h25v06       0.582348       0.264887   \n",
       "2  43.580457 -79.653295  2020-02-09  CU h25v06       0.747842       0.533480   \n",
       "3  43.580457 -79.653295  2020-02-25  CU h25v06       0.871152       0.579680   \n",
       "4  43.580457 -79.653295  2020-03-12  CU h25v06       0.439815       0.414845   \n",
       "\n",
       "   L08_002_SR_B1  L08_002_SR_B5  L08_002_SR_B3  L08_002_SR_B2  ...   \n",
       "0      -0.072262       0.039910      -0.002440      -0.132048  ...  \\\n",
       "1       0.566810       0.568542       0.571403       0.568790  ...   \n",
       "2       0.800588       0.718665       0.737117       0.792915  ...   \n",
       "3       0.951067       0.832130       0.878165       0.940782  ...   \n",
       "4       0.456315       0.477737       0.418530       0.449660  ...   \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval   \n",
       "0                                            0b0  \\\n",
       "1                                            0b0   \n",
       "2                                            0b0   \n",
       "3                                            0b0   \n",
       "4                                            0b0   \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval_Description   \n",
       "0                     aerosol retrieval is not valid          \\\n",
       "1                     aerosol retrieval is not valid           \n",
       "2                     aerosol retrieval is not valid           \n",
       "3                     aerosol retrieval is not valid           \n",
       "4                     aerosol retrieval is not valid           \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Water  L08_002_SR_QA_AEROSOL_Water_Description   \n",
       "0                          0b1                           pixel is water  \\\n",
       "1                          0b0                       pixel is not water   \n",
       "2                          0b0                       pixel is not water   \n",
       "3                          0b0                       pixel is not water   \n",
       "4                          0b0                       pixel is not water   \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Unused L08_002_SR_QA_AEROSOL_Unused_Description   \n",
       "0                           0b0                                      NaN  \\\n",
       "1                           0b0                                      NaN   \n",
       "2                           0b0                                      NaN   \n",
       "3                           0b0                                      NaN   \n",
       "4                           0b0                                      NaN   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Interpolated_Aerosol   \n",
       "0                                        0b1  \\\n",
       "1                                        0b1   \n",
       "2                                        0b1   \n",
       "3                                        0b1   \n",
       "4                                        0b1   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Interpolated_Aerosol_Description   \n",
       "0                      pixel is aerosol interpolated      \\\n",
       "1                      pixel is aerosol interpolated       \n",
       "2                      pixel is aerosol interpolated       \n",
       "3                      pixel is aerosol interpolated       \n",
       "4                      pixel is aerosol interpolated       \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Aerosol_Level   \n",
       "0                                0b11  \\\n",
       "1                                0b11   \n",
       "2                                0b11   \n",
       "3                                0b11   \n",
       "4                                0b11   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Aerosol_Level_Description  \n",
       "0                                            High  \n",
       "1                                            High  \n",
       "2                                            High  \n",
       "3                                            High  \n",
       "4                                            High  \n",
       "\n",
       "[5 rows x 77 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('Landsat-8-and-9-SR-Bands-1-7-L08-002-results.csv')\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Date</th>\n",
       "      <th>ARD_Tile</th>\n",
       "      <th>L08_002_SR_B4</th>\n",
       "      <th>L08_002_SR_B6</th>\n",
       "      <th>L08_002_SR_B1</th>\n",
       "      <th>L08_002_SR_B5</th>\n",
       "      <th>L08_002_SR_B3</th>\n",
       "      <th>L08_002_SR_B2</th>\n",
       "      <th>...</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Water</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Water_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Unused</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Unused_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Interpolated_Aerosol</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Interpolated_Aerosol_Description</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Aerosol_Level</th>\n",
       "      <th>L08_002_SR_QA_AEROSOL_Aerosol_Level_Description</th>\n",
       "      <th>date_diff</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2020-01-08</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>-0.044845</td>\n",
       "      <td>0.045878</td>\n",
       "      <td>-0.072262</td>\n",
       "      <td>0.039910</td>\n",
       "      <td>-0.002440</td>\n",
       "      <td>-0.132048</td>\n",
       "      <td>...</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2020-01-24</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.582348</td>\n",
       "      <td>0.264887</td>\n",
       "      <td>0.566810</td>\n",
       "      <td>0.568542</td>\n",
       "      <td>0.571403</td>\n",
       "      <td>0.568790</td>\n",
       "      <td>...</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2020-02-09</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.747842</td>\n",
       "      <td>0.533480</td>\n",
       "      <td>0.800588</td>\n",
       "      <td>0.718665</td>\n",
       "      <td>0.737117</td>\n",
       "      <td>0.792915</td>\n",
       "      <td>...</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2020-02-25</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.871152</td>\n",
       "      <td>0.579680</td>\n",
       "      <td>0.951067</td>\n",
       "      <td>0.832130</td>\n",
       "      <td>0.878165</td>\n",
       "      <td>0.940782</td>\n",
       "      <td>...</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>43.580457</td>\n",
       "      <td>-79.653295</td>\n",
       "      <td>2020-03-12</td>\n",
       "      <td>CU h25v06</td>\n",
       "      <td>0.439815</td>\n",
       "      <td>0.414845</td>\n",
       "      <td>0.456315</td>\n",
       "      <td>0.477737</td>\n",
       "      <td>0.418530</td>\n",
       "      <td>0.449660</td>\n",
       "      <td>...</td>\n",
       "      <td>aerosol retrieval is not valid</td>\n",
       "      <td>0b0</td>\n",
       "      <td>pixel is not water</td>\n",
       "      <td>0b0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0b1</td>\n",
       "      <td>pixel is aerosol interpolated</td>\n",
       "      <td>0b11</td>\n",
       "      <td>High</td>\n",
       "      <td>16.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 78 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Latitude  Longitude       Date   ARD_Tile  L08_002_SR_B4  L08_002_SR_B6   \n",
       "0  43.580457 -79.653295 2020-01-08  CU h25v06      -0.044845       0.045878  \\\n",
       "1  43.580457 -79.653295 2020-01-24  CU h25v06       0.582348       0.264887   \n",
       "2  43.580457 -79.653295 2020-02-09  CU h25v06       0.747842       0.533480   \n",
       "3  43.580457 -79.653295 2020-02-25  CU h25v06       0.871152       0.579680   \n",
       "4  43.580457 -79.653295 2020-03-12  CU h25v06       0.439815       0.414845   \n",
       "\n",
       "   L08_002_SR_B1  L08_002_SR_B5  L08_002_SR_B3  L08_002_SR_B2  ...   \n",
       "0      -0.072262       0.039910      -0.002440      -0.132048  ...  \\\n",
       "1       0.566810       0.568542       0.571403       0.568790  ...   \n",
       "2       0.800588       0.718665       0.737117       0.792915  ...   \n",
       "3       0.951067       0.832130       0.878165       0.940782  ...   \n",
       "4       0.456315       0.477737       0.418530       0.449660  ...   \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Valid_aerosol_retrieval_Description   \n",
       "0                     aerosol retrieval is not valid          \\\n",
       "1                     aerosol retrieval is not valid           \n",
       "2                     aerosol retrieval is not valid           \n",
       "3                     aerosol retrieval is not valid           \n",
       "4                     aerosol retrieval is not valid           \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Water  L08_002_SR_QA_AEROSOL_Water_Description   \n",
       "0                          0b1                           pixel is water  \\\n",
       "1                          0b0                       pixel is not water   \n",
       "2                          0b0                       pixel is not water   \n",
       "3                          0b0                       pixel is not water   \n",
       "4                          0b0                       pixel is not water   \n",
       "\n",
       "   L08_002_SR_QA_AEROSOL_Unused  L08_002_SR_QA_AEROSOL_Unused_Description   \n",
       "0                           0b0                                       NaN  \\\n",
       "1                           0b0                                       NaN   \n",
       "2                           0b0                                       NaN   \n",
       "3                           0b0                                       NaN   \n",
       "4                           0b0                                       NaN   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Interpolated_Aerosol   \n",
       "0                                        0b1  \\\n",
       "1                                        0b1   \n",
       "2                                        0b1   \n",
       "3                                        0b1   \n",
       "4                                        0b1   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Interpolated_Aerosol_Description   \n",
       "0                      pixel is aerosol interpolated      \\\n",
       "1                      pixel is aerosol interpolated       \n",
       "2                      pixel is aerosol interpolated       \n",
       "3                      pixel is aerosol interpolated       \n",
       "4                      pixel is aerosol interpolated       \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Aerosol_Level   \n",
       "0                                0b11  \\\n",
       "1                                0b11   \n",
       "2                                0b11   \n",
       "3                                0b11   \n",
       "4                                0b11   \n",
       "\n",
       "  L08_002_SR_QA_AEROSOL_Aerosol_Level_Description date_diff  \n",
       "0                                            High       NaN  \n",
       "1                                            High      16.0  \n",
       "2                                            High      16.0  \n",
       "3                                            High      16.0  \n",
       "4                                            High      16.0  \n",
       "\n",
       "[5 rows x 78 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Date'] = pd.to_datetime(df['Date'])\n",
    "df['date_diff'] = df['Date'].diff().dt.days\n",
    "\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(df['date_diff'], bins=35, range=(0,35))\n",
    "plt.title('Histogram of Landsat9 Revisit Periods')\n",
    "plt.xlabel('Days')\n",
    "plt.ylabel('Frequency')\n",
    "plt.savefig('revisit_histogram.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df['Date'], df['date_diff'])\n",
    "plt.title('Time Series of Landsat9 Revisit Periods')\n",
    "plt.xlabel('Date')\n",
    "plt.ylabel('Days')\n",
    "plt.xticks(rotation=45)\n",
    "plt.savefig('revisit_timeseries.png')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
